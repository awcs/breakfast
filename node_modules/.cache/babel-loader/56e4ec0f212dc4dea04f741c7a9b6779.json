{"ast":null,"code":"import _regeneratorRuntime from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/emleb/projets/Breakfast/src/Components/Winners.js\";\nimport React, { Component } from 'react';\nimport './Winners.scss';\nimport axios from 'axios';\nimport underscore from 'underscore';\n\nvar Winners =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Winners, _Component);\n\n  function Winners() {\n    var _this;\n\n    _classCallCheck(this, Winners);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Winners).call(this));\n\n    _this.sampleList = function () {\n      var sampled = underscore.sample(_this.state.users, 3); //   method \n\n      _this.setState({\n        selectedItems: sampled\n      }, _this.addSelected);\n    };\n\n    _this.addSelected = function () {\n      _this.setState({\n        alreadySelected: [].concat(_toConsumableArray(_this.state.alreadySelected), _toConsumableArray(_this.state.selectedItems))\n      });\n    };\n\n    _this.state = {\n      users: [],\n      selectedItems: [],\n      alreadySelected: []\n    };\n    return _this;\n  }\n\n  _createClass(Winners, [{\n    key: \"componentDidMount\",\n    //New syntax async// await\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('http://localhost:6999/users');\n\n              case 2:\n                result = _context.sent;\n                this.setState({\n                  users: result.data\n                }, function () {\n                  _this2.sampleList();\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //.sample is a method to produce a random list of 3 people\n    //the sampled result is stored in the new table selectedItems\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"c-winners\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.selectedItems.map(function (item, index) {\n        return React.createElement(\"div\", {\n          className: \"c-winners__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, item.nom_prenom))));\n      }));\n    }\n  }]);\n\n  return Winners;\n}(Component);\n\nexport default Winners;","map":{"version":3,"sources":["/home/emleb/projets/Breakfast/src/Components/Winners.js"],"names":["React","Component","axios","underscore","Winners","sampleList","sampled","sample","state","users","setState","selectedItems","addSelected","alreadySelected","get","result","data","map","item","index","nom_prenom"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;;IAEMC,O;;;;;AACJ,qBAAc;AAAA;;AAAA;;AACV;;AADU,UAoBdC,UApBc,GAoBD,YAAM;AACf,UAAMC,OAAO,GAAGH,UAAU,CAACI,MAAX,CAAkB,MAAKC,KAAL,CAAWC,KAA7B,EAAmC,CAAnC,CAAhB,CADe,CAEjB;;AACE,YAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEL;AADH,OAAd,EAEG,MAAKM,WAFR;AAGH,KA1Ba;;AAAA,UA4BdA,WA5Bc,GA4BA,YAAM;AAClB,YAAKF,QAAL,CAAc;AACVG,QAAAA,eAAe,+BAAM,MAAKL,KAAL,CAAWK,eAAjB,sBAAqC,MAAKL,KAAL,CAAWG,aAAhD;AADL,OAAd;AAGD,KAhCa;;AAEV,UAAKH,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETE,MAAAA,aAAa,EAAE,EAFN;AAGTE,MAAAA,eAAe,EAAE;AAHR,KAAb;AAFU;AAOb;;;;AAED;;;;;;;;;;;;;uBAGuBX,KAAK,CAACY,GAAN,CAAU,6BAAV,C;;;AAAfC,gBAAAA,M;AACN,qBAAKL,QAAL,CAAc;AAACD,kBAAAA,KAAK,EAAEM,MAAM,CAACC;AAAf,iBAAd,EAAoC,YAAM;AACtC,kBAAA,MAAI,CAACX,UAAL;AACH,iBAFD;;;;;;;;;;;;;;;QAKF;AACA;;;;6BAeW;AACL,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACO,KAAKG,KAAL,CAAWG,aAAX,CAAyBM,GAAzB,CAA6B,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC3C,eACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,MAAtB;AAA6B,UAAA,IAAI,EAAC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,IAAI,CAACE,UAAT,CADA,CADJ,CADA,CADF;AASD,OAVF,CADP,CADJ;AAgBH;;;;EApDiBnB,S;;AAuDtB,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Winners.scss';\nimport axios from 'axios';\n\nimport underscore from 'underscore';\n\nclass Winners extends Component {\n  constructor() {\n      super();\n      this.state = {\n          users: [],\n          selectedItems: [],\n          alreadySelected: []\n      }\n  }\nS\n  //New syntax async// await\n  async componentDidMount() {\n    //upon loading, I store in the state the result of my fetch\n    const result = await axios.get('http://localhost:6999/users')\n    this.setState({users: result.data}, () => {\n        this.sampleList();\n    });\n  }\n\n  //.sample is a method to produce a random list of 3 people\n  //the sampled result is stored in the new table selectedItems\n  sampleList = () => {\n      const sampled = underscore.sample(this.state.users,3)\n    //   method \n      this.setState({\n        selectedItems: sampled,\n      }, this.addSelected)\n  }\n  //create a method that adds 3 persons in array alreadySelected// apply onClick\n  addSelected = () => {\n    this.setState({\n        alreadySelected: [...this.state.alreadySelected, ...this.state.selectedItems]\n    })\n  }\n\n    render() {\n        return (\n            <div className=\"c-winners\">\n                  {this.state.selectedItems.map((item, index) => {\n                      return (\n                        <div className=\"c-winners__input\">\n                        <input type=\"text\" id=\"name\" name=\"\" >\n                            <p key={index}>\n                            <p>{item.nom_prenom}</p>\n                            </p> \n                            </input>\n                        </div> \n                      )\n                    })}\n            </div>\n\n        )\n    }\n}\n\nexport default Winners;\n\n\n"]},"metadata":{},"sourceType":"module"}