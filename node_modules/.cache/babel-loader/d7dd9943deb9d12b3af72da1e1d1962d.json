{"ast":null,"code":"import axios from 'axios';\nimport { toastr } from 'react-redux-toastr';\nimport underscore from 'underscore';\nvar apiUrl = 'http://localhost:6999/users';\nvar apiSendUsersUrl = 'http://localhost:6999/send';\nvar toastrOptions = {\n  timeOut: 3000,\n  onCloseButtonClick: function onCloseButtonClick() {\n    return console.log('Close button was clicked');\n  },\n  showCloseButton: false\n};\nexport var ADD_WINNERS_BY_WEEK = 'winners: addWinnersByWeekAction';\nexport var MAIL_WINNERS = 'winners: mailWinnersAction';\n\nvar mailWinners = function mailWinners(_ref) {\n  var email = _ref.email;\n  return {\n    type: MAIL_WINNERS,\n    payload: {\n      emails: email\n    }\n  };\n};\n\nexport var addWinnersByWeekAction = function addWinnersByWeekAction() {\n  return function (dispatch, getState) {\n    console.log('addWinnersByWeekAction');\n    var users = getState().users;\n    var sampled = underscore.sample(users, 3);\n    console.log('sampled', sampled);\n    var emails = sampled.map(function (item) {\n      return item.emails;\n    });\n    console.log('emails', emails); // return axios.post(apiSendUsersUrl, {emails}) \n    //     .then(response => {\n    //         dispatch(mailWinners(response.data))\n    //         toastr.success('Confirmation', 'Un mail a bien été envoyé aux 3 participants', toastrOptions)\n    //     })\n    //     .catch(error => {\n    //         throw(error);\n    //     });\n  }; //   return {\n  //       type: ADD_WINNERS_BY_WEEK ,\n  //       payload: {\n  //         //   users: users\n  //       }\n  //   }\n}; //Action to send mail to 3 winners\n// export const mailWinnersAction = (data) => {\n//     return (dispatch) => {\n//        return axios.post(apiSendUsersUrl, data) \n//         .then(response => {\n//           dispatch(mailWinners(response.data))\n//         })\n//         .catch(error => {\n//           throw(error);\n//         });\n//     };\n//   };","map":{"version":3,"sources":["/home/emleb/Projets perso/Breakfast/src/Actions/winnerActions.js"],"names":["axios","toastr","underscore","apiUrl","apiSendUsersUrl","toastrOptions","timeOut","onCloseButtonClick","console","log","showCloseButton","ADD_WINNERS_BY_WEEK","MAIL_WINNERS","mailWinners","email","type","payload","emails","addWinnersByWeekAction","dispatch","getState","users","sampled","sample","map","item"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,IAAMC,MAAM,GAAG,6BAAf;AACA,IAAMC,eAAe,GAAG,4BAAxB;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE,IADS;AAElBC,EAAAA,kBAAkB,EAAE;AAAA,WAAMC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAN;AAAA,GAFF;AAGlBC,EAAAA,eAAe,EAAE;AAHC,CAAtB;AAMA,OAAO,IAAMC,mBAAmB,GAAG,iCAA5B;AACP,OAAO,IAAMC,YAAY,GAAG,4BAArB;;AAGP,IAAMC,WAAW,GAAI,SAAfA,WAAe,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEH,YADD;AAELI,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAEH;AADD;AAFJ,GAAP;AAMD,CAPH;;AASA,OAAO,IAAMI,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACxC,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC3BZ,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,QAAMY,KAAK,GAAGD,QAAQ,GAAGC,KAAzB;AACA,QAAMC,OAAO,GAAGpB,UAAU,CAACqB,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB,CAAhB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBa,OAAvB;AACA,QAAML,MAAM,GAAGK,OAAO,CAACE,GAAR,CAAY,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACR,MAAT;AAAA,KAAhB,CAAf;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBQ,MAAtB,EAN2B,CAO3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAfD,CADwC,CAiBxC;AACA;AACA;AAEA;AACA;AACA;AAED,CAzBI,C,CA4BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\nimport {toastr} from 'react-redux-toastr'\nimport underscore from 'underscore';\n\nconst apiUrl = 'http://localhost:6999/users';\nconst apiSendUsersUrl = 'http://localhost:6999/send';\n\nconst toastrOptions = {\n    timeOut: 3000, \n    onCloseButtonClick: () => console.log('Close button was clicked'),\n    showCloseButton: false, \n}\n   \nexport const ADD_WINNERS_BY_WEEK = 'winners: addWinnersByWeekAction';\nexport const MAIL_WINNERS = 'winners: mailWinnersAction';\n\n\nconst mailWinners =  ({email}) => {\n    return {\n      type: MAIL_WINNERS,\n      payload: {\n        emails: email\n      }\n    }\n  };\n\nexport const addWinnersByWeekAction = () => {\n    return (dispatch, getState) => {\n        console.log('addWinnersByWeekAction');\n        const users = getState().users;\n        const sampled = underscore.sample(users, 3)\n        console.log('sampled', sampled);\n        const emails = sampled.map(item => item.emails)\n        console.log('emails', emails);\n        // return axios.post(apiSendUsersUrl, {emails}) \n        //     .then(response => {\n        //         dispatch(mailWinners(response.data))\n        //         toastr.success('Confirmation', 'Un mail a bien été envoyé aux 3 participants', toastrOptions)\n        //     })\n        //     .catch(error => {\n        //         throw(error);\n        //     });\n    }\n    //   return {\n    //       type: ADD_WINNERS_BY_WEEK ,\n    //       payload: {\n\n    //         //   users: users\n    //       }\n    //   }\n\n  }\n\n\n//Action to send mail to 3 winners\n// export const mailWinnersAction = (data) => {\n//     return (dispatch) => {\n//        return axios.post(apiSendUsersUrl, data) \n//         .then(response => {\n//           dispatch(mailWinners(response.data))\n//         })\n//         .catch(error => {\n//           throw(error);\n//         });\n//     };\n//   };\n  \n  \n  "]},"metadata":{},"sourceType":"module"}