{"ast":null,"code":"import _regeneratorRuntime from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/emleb/projets/breakfast/src/Components/Winners.js\";\nimport React, { Component } from 'react';\nimport './Winners.css';\nimport axios from 'axios';\nimport underscore from 'underscore';\n\nvar Winners =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Winners, _Component);\n\n  function Winners() {\n    var _this;\n\n    _classCallCheck(this, Winners);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Winners).call(this));\n\n    _this.sampleList = function () {\n      var sampled = underscore.sample(_this.state.liste, 3); //   method \n\n      alreadySelected.forEach(function (nom_prenom, index) {\n        console.log(index);\n      });\n\n      _this.setState({\n        selectedItems: sampled\n      }, _this.addSelected);\n    };\n\n    _this.addSelected = function () {\n      _this.setState({\n        alreadySelected: [].concat(_toConsumableArray(_this.state.alreadySelected), _toConsumableArray(_this.state.selectedItems))\n      });\n    };\n\n    _this.onClick = function () {\n      {\n        _this.sampleList();\n      }\n      {\n        _this.addSelected();\n      }\n    };\n\n    _this.state = {\n      liste: [],\n      selectedItems: [],\n      alreadySelected: []\n    };\n    return _this;\n  } //New syntax async// await\n\n\n  _createClass(Winners, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('http://localhost:6999/liste');\n\n              case 2:\n                result = _context.sent;\n                this.setState({\n                  liste: result.data\n                }, function () {\n                  _this2.sampleList();\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //.sample is a method to produce a random list of 3 people\n    //the sampled result is stored in the new table selectedItems\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"winners\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Winners\"), this.state.selectedItems.map(function (item, index) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, item.nom_prenom)));\n      }));\n    }\n  }]);\n\n  return Winners;\n}(Component);\n\nexport default Winners;","map":{"version":3,"sources":["/home/emleb/projets/breakfast/src/Components/Winners.js"],"names":["React","Component","axios","underscore","Winners","sampleList","sampled","sample","state","liste","alreadySelected","forEach","nom_prenom","index","console","log","setState","selectedItems","addSelected","onClick","get","result","data","map","item"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;;IAEMC,O;;;;;AACJ,qBAAc;AAAA;;AAAA;;AACV;;AADU,UAoBdC,UApBc,GAoBD,YAAM;AACf,UAAMC,OAAO,GAAGH,UAAU,CAACI,MAAX,CAAkB,MAAKC,KAAL,CAAWC,KAA7B,EAAoC,CAApC,CAAhB,CADe,CAEjB;;AACDC,MAAAA,eAAe,CAACC,OAAhB,CAAwB,UAASC,UAAT,EAAqBC,KAArB,EAA2B;AAC/CC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAFD;;AAGG,YAAKG,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEX;AADH,OAAd,EAEG,MAAKY,WAFR;AAGH,KA7Ba;;AAAA,UA+BdA,WA/Bc,GA+BA,YAAM;AAClB,YAAKF,QAAL,CAAc;AACVN,QAAAA,eAAe,+BAAM,MAAKF,KAAL,CAAWE,eAAjB,sBAAqC,MAAKF,KAAL,CAAWS,aAAhD;AADL,OAAd;AAGD,KAnCa;;AAAA,UAqCdE,OArCc,GAqCL,YAAM;AACX;AAAC,cAAKd,UAAL;AAAkB;AACnB;AAAC,cAAKa,WAAL;AAAmB;AACvB,KAxCa;;AAEV,UAAKV,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETQ,MAAAA,aAAa,EAAE,EAFN;AAGTP,MAAAA,eAAe,EAAE;AAHR,KAAb;AAFU;AAOb,G,CAED;;;;;;;;;;;;;;;;;uBAGuBR,KAAK,CAACkB,GAAN,CAAU,6BAAV,C;;;AAAfC,gBAAAA,M;AACN,qBAAKL,QAAL,CAAc;AAACP,kBAAAA,KAAK,EAAEY,MAAM,CAACC;AAAf,iBAAd,EAAoC,YAAM;AACtC,kBAAA,MAAI,CAACjB,UAAL;AACH,iBAFD;;;;;;;;;;;;;;;QAKF;AACA;;;;6BAsBW;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAE,KAAKc,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEM,KAAKX,KAAL,CAAWS,aAAX,CAAyBM,GAAzB,CAA6B,UAACC,IAAD,EAAOX,KAAP,EAAiB;AAC5C,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIW,IAAI,CAACZ,UAAT,CADA,CADJ,CADF;AAOH,OARC,CAFN,CADJ;AAeH;;;;EA1DiBX,S;;AA6DtB,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Winners.css';\nimport axios from 'axios';\n\nimport underscore from 'underscore';\n\nclass Winners extends Component {\n  constructor() {\n      super();\n      this.state = {\n          liste: [],\n          selectedItems: [],\n          alreadySelected: []\n      }\n  }\n\n  //New syntax async// await\n  async componentDidMount() {\n    //upon loading, I store in the state the result of my fetch\n    const result = await axios.get('http://localhost:6999/liste')\n    this.setState({liste: result.data}, () => {\n        this.sampleList();\n    });\n  }\n\n  //.sample is a method to produce a random list of 3 people\n  //the sampled result is stored in the new table selectedItems\n  sampleList = () => {\n      const sampled = underscore.sample(this.state.liste, 3)\n    //   method \n   alreadySelected.forEach(function(nom_prenom, index){\n       console.log(index)\n   })\n      this.setState({\n        selectedItems: sampled,\n      }, this.addSelected)\n  }\n  //create a method that adds 3 persons in array alreadySelected// apply onClick\n  addSelected = () => {\n    this.setState({\n        alreadySelected: [...this.state.alreadySelected, ...this.state.selectedItems]\n    })\n  }\n\n  onClick =() => {\n      {this.sampleList()}\n      {this.addSelected()}\n  }\n    render() {\n        return (\n            <div>\n                <button className=\"winners\" onClick={this.onClick}>Winners</button>\n                 {this.state.selectedItems.map((item, index) => {\n                    return (\n                      <div>\n                          <p key={index}>\n                          <p>{item.nom_prenom}</p>\n                          </p> \n                      </div> \n                    )\n                })}\n                \n            </div>\n        )\n    }\n}\n\nexport default Winners;\n"]},"metadata":{},"sourceType":"module"}