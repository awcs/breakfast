{"ast":null,"code":"import _classCallCheck from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/emleb/projets/breakfast/src/Components/Winners.js\";\nimport React, { Component } from 'react';\nimport './Winners.css';\nimport axios from 'axios';\nimport underscore from 'underscore';\n\nvar Winners =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Winners, _Component);\n\n  function Winners() {\n    var _this;\n\n    _classCallCheck(this, Winners);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Winners).call(this));\n\n    _this.sampleList = function () {\n      var sampled = underscore.sample(_this.state.liste, 3); //sampled[index, nom_prenom] = ! this.state.liste[index, nom_prenom]\n\n      _this.setState({\n        selectedItems: sampled\n      });\n    };\n\n    _this.state = {\n      liste: [],\n      selectedItems: [] //dès le chargement , je stocke dans le state, le résultat de mon fetch\n\n    };\n    axios.get('http://localhost:6999/liste').then(function (result) {\n      _this.setState({\n        liste: result.data\n      });\n    });\n    return _this;\n  }\n\n  _createClass(Winners, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.sampleList();\n    } //Méthode permettant de produire une liste aléatoire de 3 personnes\n    //le setState ne lit pas les index d'un tableau, donc il faut déclarer une variable, et lui donner la valeur de \"liste\".\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.state.selectedItems.map(function (item, index) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, item.nom_prenom)));\n      }));\n    }\n  }]);\n\n  return Winners;\n}(Component);\n\nexport default Winners;","map":{"version":3,"sources":["/home/emleb/projets/breakfast/src/Components/Winners.js"],"names":["React","Component","axios","underscore","Winners","sampleList","sampled","sample","state","liste","setState","selectedItems","get","then","result","data","map","item","index","nom_prenom"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;;IAEMC,O;;;;;AACJ,qBAAc;AAAA;;AAAA;;AACV;;AADU,UAmBdC,UAnBc,GAmBD,YAAM;AACf,UAAMC,OAAO,GAAGH,UAAU,CAACI,MAAX,CAAkB,MAAKC,KAAL,CAAWC,KAA7B,EAAoC,CAApC,CAAhB,CADe,CAEf;;AACA,YAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEL;AADH,OAAd;AAGH,KAzBa;;AAEV,UAAKE,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETE,MAAAA,aAAa,EAAE,EAFN,CAIb;;AAJa,KAAb;AAKAT,IAAAA,KAAK,CAACU,GAAN,CAAU,6BAAV,EACCC,IADD,CACM,UAACC,MAAD,EAAY;AACd,YAAKJ,QAAL,CAAc;AAACD,QAAAA,KAAK,EAAEK,MAAM,CAACC;AAAf,OAAd;AACH,KAHD;AAPU;AAWb;;;;wCAEmB;AAClB,WAAKV,UAAL;AACD,K,CAED;AACA;;;;6BASW;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,KAAKG,KAAL,CAAWG,aAAX,CAAyBK,GAAzB,CAA6B,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC5C,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,IAAI,CAACE,UAAT,CADA,CADJ,CADJ;AAOH,OARC,CADN,CADJ;AAaH;;;;EA1CiBlB,S;;AA6CtB,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport './Winners.css'\nimport axios from 'axios';\n\nimport underscore from 'underscore';\n\nclass Winners extends Component {\n  constructor() {\n      super();\n      this.state = {\n          liste: [],\n          selectedItems: []\n      }\n      //dès le chargement , je stocke dans le state, le résultat de mon fetch\n      axios.get('http://localhost:6999/liste')\n      .then((result) => {\n          this.setState({liste: result.data})\n      });\n  }\n\n  componentDidMount() {\n    this.sampleList()\n  }\n\n  //Méthode permettant de produire une liste aléatoire de 3 personnes\n  //le setState ne lit pas les index d'un tableau, donc il faut déclarer une variable, et lui donner la valeur de \"liste\".\n  sampleList = () => {\n      const sampled = underscore.sample(this.state.liste, 3)\n      //sampled[index, nom_prenom] = ! this.state.liste[index, nom_prenom]\n      this.setState({\n        selectedItems: sampled,\n      })\n  }\n\n    render() {\n        return (\n            <div>\n                 {this.state.selectedItems.map((item, index) => {\n                    return (\n                        <div>\n                            <p key={index}>\n                            <p>{item.nom_prenom}</p>\n                            </p> \n                        </div> \n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default Winners;"]},"metadata":{},"sourceType":"module"}