{"ast":null,"code":"import _toConsumableArray from \"/home/emleb/Projets perso/breakfastTime/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { SEND } from '../Actions/userActions';\nimport { WINNERS_VALIDATED } from '../Actions/winnerActions';\nimport { RESET_WINNERS } from '.../Actions/winnerActions';\nvar initialState = [];\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SEND:\n      return _toConsumableArray(action.payload.users);\n\n    case WINNERS_VALIDATED:\n      return state.filter(function (item) {\n        return !action.payload.emails.includes(item.email);\n      });\n\n    case RESET_WINNERS:\n      return [].concat(_toConsumableArray(state[state.length < 3]), _toConsumableArray(state));\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/emleb/Projets perso/breakfastTime/src/Reducers/usersNotSelectedReducer.js"],"names":["SEND","WINNERS_VALIDATED","RESET_WINNERS","initialState","state","action","type","payload","users","filter","item","emails","includes","email","length"],"mappings":";AAAA,SAASA,IAAT,QAAoB,wBAApB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,IAAMC,YAAY,GAAG,EAArB;AAEA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBD,YAAyB;AAAA,MAAXE,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,IAAL;AACE,gCAAWK,MAAM,CAACE,OAAP,CAAeC,KAA1B;;AACF,SAAKP,iBAAL;AACE,aAAOG,KAAK,CAACK,MAAN,CAAa,UAAAC,IAAI;AAAA,eAAI,CAACL,MAAM,CAACE,OAAP,CAAeI,MAAf,CAAsBC,QAAtB,CAA+BF,IAAI,CAACG,KAApC,CAAL;AAAA,OAAjB,CAAP;;AACA,SAAKX,aAAL;AACA,0CAAWE,KAAK,CAACA,KAAK,CAACU,MAAN,GAAe,CAAhB,CAAhB,sBAAuCV,KAAvC;;AACF;AACE,aAAOA,KAAP;AARJ;AAUD,CAXD","sourcesContent":["import { SEND} from '../Actions/userActions';\nimport { WINNERS_VALIDATED } from '../Actions/winnerActions';\nimport { RESET_WINNERS } from '.../Actions/winnerActions';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  switch (action.type) { \n    case SEND:\n      return [...action.payload.users];\n    case WINNERS_VALIDATED:\n      return state.filter(item => !action.payload.emails.includes(item.email))\n      case RESET_WINNERS:\n      return [...state[state.length < 3], ...state];\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}