{"ast":null,"code":"import _classCallCheck from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/emleb/Projets perso/Breakfast/src/Components/Winners.jsx\";\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport './Winners.scss';\nimport { addWinnersByWeekAction } from '../Actions/winnerActions';\n\nvar Winners =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Winners, _Component);\n\n  function Winners() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Winners);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Winners)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onClickMail = function () {\n      _this.props.selectNewWinners();\n    };\n\n    return _this;\n  }\n\n  _createClass(Winners, [{\n    key: \"render\",\n    value: function render() {\n      //ici je fais appelle à this.props.users car c'est le state général\n      return React.createElement(\"div\", {\n        className: \"c-winners\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"c-winners__subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Et les gagnants sont ...\"), this.props.winners.map(function (winner) {\n        return React.createElement(\"div\", {\n          key: winner.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"c-winners__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, winner.nom_prenom));\n      }), React.createElement(\"button\", {\n        className: \"c-winners__button\",\n        onClick: this.onClickMail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Pr\\xE9viens les gagnants!\"));\n    }\n  }]);\n\n  return Winners;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    winners: state.winnersByWeek.length > 0 ? state.winnersByWeek[state.winnersByWeek.length - 1].winners : []\n  };\n};\n\nvar mapDispatchToProps = {\n  selectNewWinners: addWinnersByWeekAction\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Winners);","map":{"version":3,"sources":["/home/emleb/Projets perso/Breakfast/src/Components/Winners.jsx"],"names":["connect","React","Component","addWinnersByWeekAction","Winners","onClickMail","props","selectNewWinners","winners","map","winner","id","nom_prenom","mapStateToProps","state","winnersByWeek","length","mapDispatchToProps"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AAEA,SAAUC,sBAAV,QAAuC,0BAAvC;;IAIMC,O;;;;;;;;;;;;;;;;;;UAmBJC,W,GAAc,YAAM;AAClB,YAAKC,KAAL,CAAWC,gBAAX;AACD,K;;;;;;;6BAGU;AACP;AAEE,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADD,EAGO,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,MAAM;AAAA,eAC5B;AAAK,UAAA,GAAG,EAAEA,MAAM,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,MAAM,CAACE,UADV,CADN,CAD4B;AAAA,OAA7B,CAHP,EAUE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAE,KAAKP,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAVF,CADJ;AAcH;;;;EAzCiBH,S;;AA4CtB,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BN,IAAAA,OAAO,EAAEM,KAAK,CAACC,aAAN,CAAoBC,MAApB,GAA6B,CAA7B,GAAiCF,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACC,aAAN,CAAoBC,MAApB,GAA6B,CAAjD,EAAoDR,OAArF,GAA+F;AAD1E,GAAL;AAAA,CAA7B;;AAKA,IAAMS,kBAAkB,GAAG;AACzBV,EAAAA,gBAAgB,EAAEJ;AADO,CAA3B;AAKA,eAAeH,OAAO,CAACa,eAAD,EAAkBI,kBAAlB,CAAP,CAA8Cb,OAA9C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport './Winners.scss';\n\nimport {  addWinnersByWeekAction} from '../Actions/winnerActions';\n\n\n\nclass Winners extends Component {\n\n\n  //the sampled result is stored in the new table selectedItems\n  // sampleList = () => {\n  //     const sampled = underscore.sample(this.state.users,3)\n  //   //   method \n  //     this.setState({\n  //       selectedItems: sampled,\n  //     }, this.addSelected)\n  // }\n\n  // //create a method that adds 3 persons in array alreadySelected// apply onClick\n  // addSelected = () => {\n  //   this.setState({\n  //       alreadySelected: [...this.state.alreadySelected, ...this.state.selectedItems]\n  //   })\n  // }\n\n  onClickMail = () => {\n    this.props.selectNewWinners();\n  }\n  \n\n    render() {\n      //ici je fais appelle à this.props.users car c'est le state général\n\n        return (\n            <div className=\"c-winners\">\n             <h2 className=\"c-winners__subtitle\">Et les gagnants sont ...</h2> \n             {/* <img className=\"c-winners__logo\" src={process.env.PUBLIC_URL+'/assets/images/coffee-cup.svg'} width=\"50px\" alt=\"Logo coffee-cup\" /> */}\n                  {this.props.winners.map(winner => (\n                    <div key={winner.id}>  \n                          <div className=\"c-winners__input\">\n                            {winner.nom_prenom}\n                          </div>\n                    </div>  \n                  )) }\n              <button className=\"c-winners__button\" onClick={this.onClickMail}>Préviens les gagnants!</button>\n            </div>\n        )\n    }\n}\n  \nconst mapStateToProps = state => ({\n    winners: state.winnersByWeek.length > 0 ? state.winnersByWeek[state.winnersByWeek.length - 1].winners : []\n})\n\n\nconst mapDispatchToProps = {\n  selectNewWinners: addWinnersByWeekAction\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps )(Winners);\n"]},"metadata":{},"sourceType":"module"}