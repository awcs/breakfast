{"ast":null,"code":"var _this = this;\n\nimport axios from 'axios';\nimport { toastr } from 'react-redux-toastr';\nimport underscore from 'underscore';\nvar apiUrl = 'http://localhost:6999/users';\nvar apiSendUsersUrl = 'http://localhost:6999/send';\nvar toastrOptions = {\n  timeOut: 3000,\n  onCloseButtonClick: function onCloseButtonClick() {\n    return console.log('Close button was clicked');\n  },\n  showCloseButton: false\n};\nexport var ADD_WINNERS_BY_WEEK = 'winners: addWinnersByWeekAction';\nexport var MAIL_WINNERS = 'winners: mailWinnersAction';\n\nvar mailWinners = function mailWinners(data) {\n  return {\n    type: MAIL_WINNERS,\n    payload: {\n      emails: data.email\n    }\n  };\n};\n\nexport var addWinnersByWeekAction = function addWinnersByWeekAction() {\n  console.log('addWinnersByWeekAction');\n  var sampled = underscore.sample(_this.props.users, 3);\n  return function (dispatch) {\n    return axios.post(apiSendUsersUrl, data).then(function (response) {\n      dispatch(mailWinners(response.data));\n      toastr.success('Confirmation', 'Un mail a bien été envoyé aux 3 participants', toastrOptions);\n    }).catch(function (error) {\n      throw error;\n    });\n  }; //   return {\n  //       type: ADD_WINNERS_BY_WEEK ,\n  //       payload: {\n  //         //   users: users\n  //       }\n  //   }\n}; //Action to send mail to 3 winners\n// export const mailWinnersAction = (data) => {\n//     return (dispatch) => {\n//        return axios.post(apiSendUsersUrl, data) \n//         .then(response => {\n//           dispatch(mailWinners(response.data))\n//         })\n//         .catch(error => {\n//           throw(error);\n//         });\n//     };\n//   };","map":{"version":3,"sources":["/home/emleb/Projets perso/Breakfast/src/Actions/winnerActions.js"],"names":["axios","toastr","underscore","apiUrl","apiSendUsersUrl","toastrOptions","timeOut","onCloseButtonClick","console","log","showCloseButton","ADD_WINNERS_BY_WEEK","MAIL_WINNERS","mailWinners","data","type","payload","emails","email","addWinnersByWeekAction","sampled","sample","props","users","dispatch","post","then","response","success","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,IAAMC,MAAM,GAAG,6BAAf;AACA,IAAMC,eAAe,GAAG,4BAAxB;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE,IADS;AAElBC,EAAAA,kBAAkB,EAAE;AAAA,WAAMC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAN;AAAA,GAFF;AAGlBC,EAAAA,eAAe,EAAE;AAHC,CAAtB;AAOA,OAAO,IAAMC,mBAAmB,GAAG,iCAA5B;AACP,OAAO,IAAMC,YAAY,GAAG,4BAArB;;AAGP,IAAMC,WAAW,GAAI,SAAfA,WAAe,CAACC,IAAD,EAAU;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAEH,YADD;AAELI,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAEH,IAAI,CAACI;AADN;AAFJ,GAAP;AAMD,CAPH;;AASA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACxCX,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,MAAMW,OAAO,GAAGlB,UAAU,CAACmB,MAAX,CAAkB,KAAI,CAACC,KAAL,CAAWC,KAA7B,EAAoC,CAApC,CAAhB;AACA,SAAO,UAACC,QAAD,EAAc;AACjB,WAAOxB,KAAK,CAACyB,IAAN,CAAWrB,eAAX,EAA4BU,IAA5B,EACFY,IADE,CACG,UAAAC,QAAQ,EAAI;AACdH,MAAAA,QAAQ,CAACX,WAAW,CAACc,QAAQ,CAACb,IAAV,CAAZ,CAAR;AACAb,MAAAA,MAAM,CAAC2B,OAAP,CAAe,cAAf,EAA+B,8CAA/B,EAA+EvB,aAA/E;AACH,KAJE,EAKFwB,KALE,CAKI,UAAAC,KAAK,EAAI;AACZ,YAAMA,KAAN;AACH,KAPE,CAAP;AAQH,GATD,CAHwC,CAaxC;AACA;AACA;AAEA;AACA;AACA;AAED,CArBI,C,CAwBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\nimport {toastr} from 'react-redux-toastr'\nimport underscore from 'underscore';\n\nconst apiUrl = 'http://localhost:6999/users';\nconst apiSendUsersUrl = 'http://localhost:6999/send';\n\nconst toastrOptions = {\n    timeOut: 3000, \n    onCloseButtonClick: () => console.log('Close button was clicked'),\n    showCloseButton: false, \n  }\n   \n\nexport const ADD_WINNERS_BY_WEEK = 'winners: addWinnersByWeekAction';\nexport const MAIL_WINNERS = 'winners: mailWinnersAction';\n\n\nconst mailWinners =  (data) => {\n    return {\n      type: MAIL_WINNERS,\n      payload: {\n        emails: data.email\n      }\n    }\n  };\n\nexport const addWinnersByWeekAction = () => {\n    console.log('addWinnersByWeekAction');\n    const sampled = underscore.sample(this.props.users, 3)\n    return (dispatch) => {\n        return axios.post(apiSendUsersUrl, data) \n            .then(response => {\n                dispatch(mailWinners(response.data))\n                toastr.success('Confirmation', 'Un mail a bien été envoyé aux 3 participants', toastrOptions)\n            })\n            .catch(error => {\n                throw(error);\n            });\n    }\n    //   return {\n    //       type: ADD_WINNERS_BY_WEEK ,\n    //       payload: {\n\n    //         //   users: users\n    //       }\n    //   }\n\n  }\n\n\n//Action to send mail to 3 winners\n// export const mailWinnersAction = (data) => {\n//     return (dispatch) => {\n//        return axios.post(apiSendUsersUrl, data) \n//         .then(response => {\n//           dispatch(mailWinners(response.data))\n//         })\n//         .catch(error => {\n//           throw(error);\n//         });\n//     };\n//   };\n  \n  \n  "]},"metadata":{},"sourceType":"module"}