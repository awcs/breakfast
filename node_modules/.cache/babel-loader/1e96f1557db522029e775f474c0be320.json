{"ast":null,"code":"import _regeneratorRuntime from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emleb/projets/Breakfast/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/emleb/projets/Breakfast/src/Components/Winners.js\";\nimport React, { Component } from 'react';\nimport './Winners.scss';\nimport axios from 'axios';\nimport underscore from 'underscore';\n\nvar Winners =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Winners, _Component);\n\n  function Winners(props) {\n    var _this;\n\n    _classCallCheck(this, Winners);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Winners).call(this, props));\n\n    _this.sampleList = function () {\n      var sampled = underscore.sample(_this.props.users, 3); //   method \n\n      _this.setState({\n        selectedItems: sampled\n      }, _this.addSelected);\n    };\n\n    _this.addSelected = function () {\n      _this.setState({\n        alreadySelected: [].concat(_toConsumableArray(_this.state.alreadySelected), _toConsumableArray(_this.state.selectedItems))\n      });\n    };\n\n    _this.state = {\n      selectedItems: [],\n      alreadySelected: []\n    };\n    return _this;\n  } //New syntax async// await\n\n\n  _createClass(Winners, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('http://localhost:6999/users');\n\n              case 2:\n                result = _context.sent;\n                this.setState({\n                  users: result.data\n                }, function () {\n                  _this2.sampleList();\n                });\n                this.props.getUsers(result.data, function () {\n                  _this2.sampleList();\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //.sample is a method to produce a random list of 3 people\n    //the sampled result is stored in the new table selectedItems\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"c-winners\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.selectedItems.map(function (item, index) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"c-winners__input\",\n          type: \"c-winners__text\",\n          key: index,\n          Value: item.nom_prenom,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return Winners;\n}(Component);\n\nexport default Winners;","map":{"version":3,"sources":["/home/emleb/projets/Breakfast/src/Components/Winners.js"],"names":["React","Component","axios","underscore","Winners","props","sampleList","sampled","sample","users","setState","selectedItems","addSelected","alreadySelected","state","get","result","data","getUsers","map","item","index","nom_prenom"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;;AADe,UAuBnBC,UAvBmB,GAuBN,YAAM;AACf,UAAMC,OAAO,GAAGJ,UAAU,CAACK,MAAX,CAAkB,MAAKH,KAAL,CAAWI,KAA7B,EAAmC,CAAnC,CAAhB,CADe,CAEjB;;AACE,YAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEJ;AADH,OAAd,EAEG,MAAKK,WAFR;AAGH,KA7BkB;;AAAA,UA+BnBA,WA/BmB,GA+BL,YAAM;AAClB,YAAKF,QAAL,CAAc;AACVG,QAAAA,eAAe,+BAAM,MAAKC,KAAL,CAAWD,eAAjB,sBAAqC,MAAKC,KAAL,CAAWH,aAAhD;AADL,OAAd;AAGD,KAnCkB;;AAEf,UAAKG,KAAL,GAAa;AACTH,MAAAA,aAAa,EAAE,EADN;AAETE,MAAAA,eAAe,EAAE;AAFR,KAAb;AAFe;AAMlB,G,CAED;;;;;;;;;;;;;;;;;uBAGuBX,KAAK,CAACa,GAAN,CAAU,6BAAV,C;;;AAAfC,gBAAAA,M;AACN,qBAAKN,QAAL,CAAc;AAACD,kBAAAA,KAAK,EAAEO,MAAM,CAACC;AAAf,iBAAd,EAAoC,YAAM;AACtC,kBAAA,MAAI,CAACX,UAAL;AACH,iBAFD;AAIA,qBAAKD,KAAL,CAAWa,QAAX,CAAoBF,MAAM,CAACC,IAA3B,EAAiC,YAAM;AACnC,kBAAA,MAAI,CAACX,UAAL;AACH,iBAFD;;;;;;;;;;;;;;;QAKF;AACA;;;;6BAeW;AACL,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACO,KAAKQ,KAAL,CAAWH,aAAX,CAAyBQ,GAAzB,CAA6B,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC3C,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK;AAAO,UAAA,SAAS,EAAC,kBAAjB;AACC,UAAA,IAAI,EAAC,iBADN;AAEC,UAAA,GAAG,EAAEA,KAFN;AAGC,UAAA,KAAK,EAAED,IAAI,CAACE,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADL,CADF;AASD,OAVF,CADP,CADJ;AAeH;;;;EAtDiBrB,S;;AAyDtB,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Winners.scss';\n\nimport axios from 'axios';\nimport underscore from 'underscore';\n\nclass Winners extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          selectedItems: [],\n          alreadySelected: []\n      }\n  }\n\n  //New syntax async// await\n  async componentDidMount() {\n    //upon loading, I store in the state the result of my fetch\n    const result = await axios.get('http://localhost:6999/users')\n    this.setState({users: result.data}, () => {\n        this.sampleList();\n    });\n\n    this.props.getUsers(result.data, () => {\n        this.sampleList();\n    });\n  }\n\n  //.sample is a method to produce a random list of 3 people\n  //the sampled result is stored in the new table selectedItems\n  sampleList = () => {\n      const sampled = underscore.sample(this.props.users,3)\n    //   method \n      this.setState({\n        selectedItems: sampled,\n      }, this.addSelected)\n  }\n  //create a method that adds 3 persons in array alreadySelected// apply onClick\n  addSelected = () => {\n    this.setState({\n        alreadySelected: [...this.state.alreadySelected, ...this.state.selectedItems]\n    })\n  }\n\n    render() {\n        return (\n            <div className=\"c-winners\">\n                  {this.state.selectedItems.map((item, index) => {\n                      return (\n                        <div>\n                             <input className=\"c-winners__input\"\n                              type=\"c-winners__text\"\n                              key={index}\n                              Value={item.nom_prenom}\n                               />\n                        </div>  \n                      )\n                    })}\n            </div>\n        )\n    }\n}\n\nexport default Winners;\n\n\n"]},"metadata":{},"sourceType":"module"}