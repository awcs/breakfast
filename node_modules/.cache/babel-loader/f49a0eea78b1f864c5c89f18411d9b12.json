{"ast":null,"code":"import _classCallCheck from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emleb/projets/breakfast/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/emleb/projets/breakfast/src/Components/Winners.js\";\nimport React, { Component } from 'react';\nimport './Winners.css';\nimport axios from 'axios';\nimport underscore from 'underscore';\n\nvar Winners =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Winners, _Component);\n\n  function Winners() {\n    var _this;\n\n    _classCallCheck(this, Winners);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Winners).call(this));\n\n    _this.sampleList = function (index, name) {\n      var sampled = underscore.sample(_this.state.liste, 3);\n      sampled[(index, name)] = !_this.state.liste[(index, name)];\n      console.log(sampled);\n    };\n\n    _this.state = {\n      liste: [] //dès le chargement , je stocke dans le state, le résultat de mon fetch\n\n    };\n    axios.get('http://localhost:6999/liste').then(function (result) {\n      _this.setState({\n        liste: result.data\n      });\n    });\n    return _this;\n  } //Méthode permettant de produire une liste aléatoire de 3 personnes\n\n\n  _createClass(Winners, [{\n    key: \"render\",\n    //   shuffleCard = (index, url) => {\n    //     let shuffled = underscore.shuffle(this.state.characters) \n    //     shuffled[index, url] = ! this.state.characters[index, url]\n    //     this.setState({\n    //       characters: shuffled\n    //     })\n    // }\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.shuffleList));\n    }\n  }]);\n\n  return Winners;\n}(Component);\n\nexport default Winners;","map":{"version":3,"sources":["/home/emleb/projets/breakfast/src/Components/Winners.js"],"names":["React","Component","axios","underscore","Winners","sampleList","index","name","sampled","sample","state","liste","console","log","get","then","result","setState","data","shuffleList"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;;IAEMC,O;;;;;AACF,qBAAc;AAAA;;AAAA;;AACV;;AADU,UAalBC,UAbkB,GAaL,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAC1B,UAAIC,OAAO,GAAGL,UAAU,CAACM,MAAX,CAAkB,MAAKC,KAAL,CAAWC,KAA7B,EAAoC,CAApC,CAAd;AACAH,MAAAA,OAAO,EAACF,KAAK,EAAEC,IAAR,EAAP,GAAuB,CAAE,MAAKG,KAAL,CAAWC,KAAX,EAAiBL,KAAK,EAAEC,IAAxB,EAAzB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACH,KAjBiB;;AAEV,UAAKE,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE,CAGb;;AAHa,KAAb;AAIAT,IAAAA,KAAK,CAACY,GAAN,CAAU,6BAAV,EACCC,IADD,CACM,UAACC,MAAD,EAAY;AACd,YAAKC,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAAf,OAAd;AACH,KAHD;AANU;AAUb,G,CAEL;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;6BAGa;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKC,WAAT,CAVJ,CADJ;AAcH;;;;EA7CiBlB,S;;AAgDtB,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport './Winners.css'\nimport axios from 'axios';\n\nimport underscore from 'underscore';\n\nclass Winners extends Component {\n    constructor() {\n        super();\n        this.state = {\n            liste: []\n        }\n        //dès le chargement , je stocke dans le state, le résultat de mon fetch\n        axios.get('http://localhost:6999/liste')\n        .then((result) => {\n            this.setState({liste: result.data})\n        });\n    }\n\n//Méthode permettant de produire une liste aléatoire de 3 personnes\nsampleList = (index, name) => {\n    let sampled = underscore.sample(this.state.liste, 3)\n    sampled[index, name] = ! this.state.liste[index, name]\n    console.log(sampled)\n}\n\n\n//   shuffleCard = (index, url) => {\n//     let shuffled = underscore.shuffle(this.state.characters) \n//     shuffled[index, url] = ! this.state.characters[index, url]\n//     this.setState({\n//       characters: shuffled\n//     })\n// }\n\n\n    render() {\n        return (\n            <div>\n                 {/* {this.state.liste.map((liste, index) => {\n                    return (\n                        <div>\n                            <p key={index}>\n                            <p>{liste.nom_prenom}</p>\n                            </p> \n                        </div> \n                    )\n                })} */}\n                <p>{this.shuffleList}</p>\n            </div>\n        )\n    }\n}\n\nexport default Winners;"]},"metadata":{},"sourceType":"module"}