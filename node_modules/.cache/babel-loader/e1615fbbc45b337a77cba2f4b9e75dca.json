{"ast":null,"code":"import _regeneratorRuntime from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/emleb/Projets perso/Breakfast/src/App.jsx\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport Winners from './Components/Winners';\nimport Users from './Components/Users';\nimport AddUser from './Components/AddUser';\nimport axios from 'axios';\nimport { BrowserRouter, Switch, NavLink, Route } from 'react-router-dom'; // import Calendar from 'react-calendar';\n\nimport { connect } from 'react-redux';\nimport { dispatchUsersAction } from './Actions/userActions';\nimport { selectWinnersAction } from '././Actions/winnerActions';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSelectWinner = function () {\n      _this.props.selectNewWinners();\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('http://localhost:6999/users');\n\n              case 2:\n                result = _context.sent;\n                this.props.dispatchUsers(result.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.selectNewWinners) {\n        'c-header__logoSpeed';\n      }\n\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        className: \"c-app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"c-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: this.props.selectNewWinners() ? \"c-header__logoSpeed\" : \"c_header__logo\",\n        src: process.env.PUBLIC_URL + '/assets/images/donut.svg',\n        width: \"8%\",\n        alt: \"Logo donut\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(NavLink, {\n        to: \"/Users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"c-header__user\",\n        src: process.env.PUBLIC_URL + '/assets/images/users.svg',\n        width: \"30px\",\n        alt: \"icon users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"c-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"c-content__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"BREAKFAST TIME\"), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Winners,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Users\",\n        component: Users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/AddUser\",\n        component: AddUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    users: store.users\n  };\n};\n\nvar mapDispatchToProps = {\n  dispatchUsers: dispatchUsersAction,\n  selectNewWinners: selectWinnersAction\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/emleb/Projets perso/Breakfast/src/App.jsx"],"names":["React","Component","Winners","Users","AddUser","axios","BrowserRouter","Switch","NavLink","Route","connect","dispatchUsersAction","selectWinnersAction","App","onSelectWinner","props","selectNewWinners","get","result","dispatchUsers","data","process","env","PUBLIC_URL","mapStateToProps","store","users","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\n\nimport Winners from './Components/Winners';\nimport Users from './Components/Users';\nimport AddUser from './Components/AddUser'\n\n\nimport axios from 'axios';\nimport { BrowserRouter, Switch, NavLink, Route } from 'react-router-dom';\n// import Calendar from 'react-calendar';\nimport { connect } from 'react-redux';\nimport { dispatchUsersAction  } from './Actions/userActions';\nimport { selectWinnersAction } from '././Actions/winnerActions';\n\n\nclass App extends Component {\n\n  onSelectWinner = () => {\n    this.props.selectNewWinners();\n  }\n\n  async componentDidMount() {\n    const result = await axios.get('http://localhost:6999/users');\n    this.props.dispatchUsers(result.data);\n  }\n\n  render() {\n    if (this.props.selectNewWinners){\n      'c-header__logoSpeed'\n    }\n    return (\n      <BrowserRouter>\n      <main className=\"c-app\">\n        <div className=\"c-header\">\n          <NavLink to=\"/\">\n            <img className= {this.props.selectNewWinners() ? \"c-header__logoSpeed\" : \"c_header__logo\"} src={process.env.PUBLIC_URL+'/assets/images/donut.svg'} width=\"8%\" alt=\"Logo donut\" />\n          </NavLink>\n          <NavLink to=\"/Users\">\n            <img className=\"c-header__user\" src={process.env.PUBLIC_URL+'/assets/images/users.svg'} width=\"30px\" alt=\"icon users\" />\n          </NavLink>\n          {/* <NavLink to=\"/Calendar\">\n             <img className=\"c-header__calendar\" src={process.env.PUBLIC_URL+'/assets/images/daily-calendar.svg'} width=\"30px\" alt=\"icon\" />\n          </NavLink> */}\n          </div>\n        <div className=\"c-content\">\n          <h1 className=\"c-content__title\">BREAKFAST TIME</h1>\n            <Switch>\n              <Route exact path=\"/\" component={Winners} />\n              <Route path=\"/Users\" component={Users} />\n              {/* <Route path=\"/Calendar\" component={Calendar}/> */}\n              <Route path =\"/AddUser\" component={AddUser} />\n            </Switch>\n         </div>\n      </main>\n      </BrowserRouter>  \n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    users: store.users\n  }\n}\nconst mapDispatchToProps = {\n  dispatchUsers:  dispatchUsersAction,\n  selectNewWinners: selectWinnersAction,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n"]},"metadata":{},"sourceType":"module"}