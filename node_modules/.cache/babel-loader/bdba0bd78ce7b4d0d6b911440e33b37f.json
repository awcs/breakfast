{"ast":null,"code":"import _classCallCheck from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/emleb/Projets perso/Breakfast/src/Components/Winners.jsx\";\nimport { connect } from 'react-redux';\nimport underscore from 'underscore';\nimport React, { Component } from 'react';\nimport { toastr } from 'react-redux-toastr';\nimport './Winners.scss';\nimport { mailWinnersAction } from '../Actions/Actions';\nvar toastrOptions = {\n  timeOut: 3000,\n  // by setting to 0 it will prevent the auto close\n  icon: React.createElement(\"myCustomIconOrAvatar\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }),\n  // You can add any component you want but note the the with and height are 70px ;)\n  onShowComplete: function onShowComplete() {\n    return console.log('SHOW: animation is done');\n  },\n  onHideComplete: function onHideComplete() {\n    return console.log('HIDE: animation is done');\n  },\n  onCloseButtonClick: function onCloseButtonClick() {\n    return console.log('Close button was clicked');\n  },\n  showCloseButton: false,\n  // true by default\n  component: // this option will give you a func 'remove' as props\n  React.createElement(MyCustomComponent, {\n    myProp: \"myValue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Hello, World!\"))\n};\n\nvar Winners =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Winners, _Component);\n\n  function Winners() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Winners);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Winners)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onClickMail = function (sampled) {\n      _this.props.mailWinners(sampled);\n\n      toastr.success('Confirmation', 'Un mail a bien été envoyé aux 3 participants');\n    };\n\n    return _this;\n  }\n\n  _createClass(Winners, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var sampled = underscore.sample(this.props.users, 3); //ici je fais appelle à this.props.users car c'est le state général\n\n      return React.createElement(\"div\", {\n        className: \"c-winners\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"c-winners__subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Et les gagnants sont ...\"), sampled.map(function (item, index) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"c-winners__input\",\n          type: \"c-winners__text\",\n          key: index,\n          Value: item.nom_prenom,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }));\n      }), React.createElement(\"button\", {\n        className: \"c-winners__button\",\n        onClick: function onClick() {\n          return _this2.onClickMail(sampled);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Pr\\xE9viens les gagnants!\"));\n    }\n  }]);\n\n  return Winners;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    users: store.users\n  };\n};\n\nvar mapDispatchToProps = {\n  mailWinners: mailWinnersAction\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Winners);","map":{"version":3,"sources":["/home/emleb/Projets perso/Breakfast/src/Components/Winners.jsx"],"names":["connect","underscore","React","Component","toastr","mailWinnersAction","toastrOptions","timeOut","icon","onShowComplete","console","log","onHideComplete","onCloseButtonClick","showCloseButton","component","Winners","onClickMail","sampled","props","mailWinners","success","sample","users","map","item","index","nom_prenom","mapStateToProps","store","mapDispatchToProps"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,OAAO,gBAAP;AAEA,SAASC,iBAAT,QAAiC,oBAAjC;AAGA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE,IADW;AACL;AACfC,EAAAA,IAAI,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFa;AAEc;AAClCC,EAAAA,cAAc,EAAE;AAAA,WAAMC,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAN;AAAA,GAHI;AAIpBC,EAAAA,cAAc,EAAE;AAAA,WAAMF,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAN;AAAA,GAJI;AAKpBE,EAAAA,kBAAkB,EAAE;AAAA,WAAMH,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAN;AAAA,GALA;AAMpBG,EAAAA,eAAe,EAAE,KANG;AAMI;AACxBC,EAAAA,SAAS,EAAI;AACX,sBAAC,iBAAD;AAAmB,IAAA,MAAM,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF;AARkB,CAAtB;;IAcMC,O;;;;;;;;;;;;;;;;;;UAmBJC,W,GAAc,UAACC,OAAD,EAAa;AACzB,YAAKC,KAAL,CAAWC,WAAX,CAAuBF,OAAvB;;AACAd,MAAAA,MAAM,CAACiB,OAAP,CAAe,cAAf,EAA+B,8CAA/B;AACD,K;;;;;;;6BAGU;AAAA;;AACP,UAAMH,OAAO,GAAGjB,UAAU,CAACqB,MAAX,CAAkB,KAAKH,KAAL,CAAWI,KAA7B,EAAoC,CAApC,CAAhB,CADO,CAEP;;AAEE,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADD,EAGOL,OAAO,CAACM,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC1B,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK;AAAO,UAAA,SAAS,EAAC,kBAAjB;AACC,UAAA,IAAI,EAAC,iBADN;AAEC,UAAA,GAAG,EAAEA,KAFN;AAGC,UAAA,KAAK,EAAED,IAAI,CAACE,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADL,CADF;AASD,OAVF,CAHP,EAcE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACV,WAAL,CAAiBC,OAAjB,CAAN;AAAA,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAdF,CADJ;AAkBH;;;;EA/CiBf,S;;AAkDtB,IAAMyB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLN,IAAAA,KAAK,EAAEM,KAAK,CAACN;AADR,GAAP;AAGD,CAJD;;AAMA,IAAMO,kBAAkB,GAAG;AACzBV,EAAAA,WAAW,EAAEf;AADY,CAA3B;AAIA,eAAeL,OAAO,CAAC4B,eAAD,EAAkBE,kBAAlB,CAAP,CAA8Cd,OAA9C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport underscore from 'underscore';\nimport React, { Component } from 'react';\nimport {toastr} from 'react-redux-toastr'\nimport './Winners.scss';\n\nimport { mailWinnersAction} from '../Actions/Actions';\n\n\nconst toastrOptions = {\n  timeOut: 3000, // by setting to 0 it will prevent the auto close\n  icon: (<myCustomIconOrAvatar />), // You can add any component you want but note the the with and height are 70px ;)\n  onShowComplete: () => console.log('SHOW: animation is done'),\n  onHideComplete: () => console.log('HIDE: animation is done'),\n  onCloseButtonClick: () => console.log('Close button was clicked'),\n  showCloseButton: false, // true by default\n  component: ( // this option will give you a func 'remove' as props\n    <MyCustomComponent myProp=\"myValue\">\n      <span>Hello, World!</span>\n    </MyCustomComponent>\n  )\n}\n\nclass Winners extends Component {\n\n\n  //the sampled result is stored in the new table selectedItems\n  // sampleList = () => {\n  //     const sampled = underscore.sample(this.state.users,3)\n  //   //   method \n  //     this.setState({\n  //       selectedItems: sampled,\n  //     }, this.addSelected)\n  // }\n\n  // //create a method that adds 3 persons in array alreadySelected// apply onClick\n  // addSelected = () => {\n  //   this.setState({\n  //       alreadySelected: [...this.state.alreadySelected, ...this.state.selectedItems]\n  //   })\n  // }\n\n  onClickMail = (sampled) => {\n    this.props.mailWinners(sampled);\n    toastr.success('Confirmation', 'Un mail a bien été envoyé aux 3 participants')\n  }\n  \n\n    render() {\n      const sampled = underscore.sample(this.props.users, 3)\n      //ici je fais appelle à this.props.users car c'est le state général\n\n        return (\n            <div className=\"c-winners\">\n             <h2 className=\"c-winners__subtitle\">Et les gagnants sont ...</h2> \n             {/* <img className=\"c-winners__logo\" src={process.env.PUBLIC_URL+'/assets/images/coffee-cup.svg'} width=\"50px\" alt=\"Logo coffee-cup\" /> */}\n                  {sampled.map((item, index) => {\n                      return (\n                        <div>  \n                             <input className=\"c-winners__input\"\n                              type=\"c-winners__text\"\n                              key={index}\n                              Value={item.nom_prenom}\n                               />\n                        </div>  \n                      )\n                    })}\n              <button className=\"c-winners__button\" onClick={() => this.onClickMail(sampled)}>Préviens les gagnants!</button>\n            </div>\n        )\n    }\n}\n  \nconst mapStateToProps = store => {\n  return {\n    users: store.users\n  }\n}\n\nconst mapDispatchToProps = {\n  mailWinners: mailWinnersAction,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps )(Winners);\n"]},"metadata":{},"sourceType":"module"}