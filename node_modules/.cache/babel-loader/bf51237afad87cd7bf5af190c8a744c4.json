{"ast":null,"code":"import _toConsumableArray from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/emleb/Projets perso/Breakfast/src/Components/Winners.jsx\";\nimport React, { Component } from 'react';\nimport './Winners.scss';\nimport axios from 'axios';\nimport underscore from 'underscore';\nimport { connect } from 'react-redux';\nimport { sendWinnersAction } from '../Actions/WinnersAction';\n\nvar Winners =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Winners, _Component);\n\n  function Winners() {\n    var _this;\n\n    _classCallCheck(this, Winners);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Winners).call(this));\n\n    _this.sampleList = function () {\n      var sampled = underscore.sample(_this.state.users, 3); //   method \n\n      _this.setState({\n        selectedItems: sampled\n      }, _this.addSelected);\n    };\n\n    _this.addSelected = function () {\n      _this.setState({\n        alreadySelected: [].concat(_toConsumableArray(_this.state.alreadySelected), _toConsumableArray(_this.state.selectedItems))\n      });\n    };\n\n    return _this;\n  } // //New syntax async// await\n  // async componentDidMount() {\n  //   //upon loading, I store in the state the result of my fetch\n  //   const result = await axios.get('http://localhost:6999/users')\n  //   this.setState({users: result.data}, () => {\n  //       this.sampleList();\n  //   });\n  // }\n  //.sample is a method to produce a random list of 3 people\n  //the sampled result is stored in the new table selectedItems\n\n\n  _createClass(Winners, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"c-winners\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"c-winners__subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Et les gagnants sont ...\"), this.state.selectedItems.map(function (item, index) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"c-winners__input\",\n          type: \"c-winners__text\",\n          key: index,\n          Value: item.nom_prenom,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return Winners;\n}(Component);\n\nexport default connect(null, mapActionToProps)(Winners);","map":{"version":3,"sources":["/home/emleb/Projets perso/Breakfast/src/Components/Winners.jsx"],"names":["React","Component","axios","underscore","connect","sendWinnersAction","Winners","sampleList","sampled","sample","state","users","setState","selectedItems","addSelected","alreadySelected","map","item","index","nom_prenom","mapActionToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;;IAGMC,O;;;;;AACJ,qBAAc;AAAA;;AAAA;;AACV;;AADU,UAgBdC,UAhBc,GAgBD,YAAM;AACf,UAAMC,OAAO,GAAGL,UAAU,CAACM,MAAX,CAAkB,MAAKC,KAAL,CAAWC,KAA7B,EAAmC,CAAnC,CAAhB,CADe,CAEjB;;AACE,YAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEL;AADH,OAAd,EAEG,MAAKM,WAFR;AAGH,KAtBa;;AAAA,UAwBdA,WAxBc,GAwBA,YAAM;AAClB,YAAKF,QAAL,CAAc;AACVG,QAAAA,eAAe,+BAAM,MAAKL,KAAL,CAAWK,eAAjB,sBAAqC,MAAKL,KAAL,CAAWG,aAAhD;AADL,OAAd;AAGD,KA5Ba;;AAAA;AAEb,G,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;6BAgBW;AACL,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADD,EAEO,KAAKH,KAAL,CAAWG,aAAX,CAAyBG,GAAzB,CAA6B,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC3C,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK;AAAO,UAAA,SAAS,EAAC,kBAAjB;AACC,UAAA,IAAI,EAAC,iBADN;AAEC,UAAA,GAAG,EAAEA,KAFN;AAGC,UAAA,KAAK,EAAED,IAAI,CAACE,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADL,CADF;AASD,OAVF,CAFP,CADJ;AAgBH;;;;EAjDiBlB,S;;AAqDpB,eAAeG,OAAO,CAAG,IAAH,EAASgB,gBAAT,CAAP,CAAkCd,OAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Winners.scss';\n\nimport axios from 'axios';\nimport underscore from 'underscore';\nimport { connect } from 'react-redux';\nimport { sendWinnersAction } from '../Actions/WinnersAction';\n\n\nclass Winners extends Component {\n  constructor() {\n      super();\n  }\n\n  // //New syntax async// await\n  // async componentDidMount() {\n  //   //upon loading, I store in the state the result of my fetch\n  //   const result = await axios.get('http://localhost:6999/users')\n  //   this.setState({users: result.data}, () => {\n  //       this.sampleList();\n  //   });\n  // }\n\n\n  //.sample is a method to produce a random list of 3 people\n  //the sampled result is stored in the new table selectedItems\n  sampleList = () => {\n      const sampled = underscore.sample(this.state.users,3)\n    //   method \n      this.setState({\n        selectedItems: sampled,\n      }, this.addSelected)\n  }\n  //create a method that adds 3 persons in array alreadySelected// apply onClick\n  addSelected = () => {\n    this.setState({\n        alreadySelected: [...this.state.alreadySelected, ...this.state.selectedItems]\n    })\n  }\n\n\n    render() {\n        return (\n            <div className=\"c-winners\">\n             <h2 className=\"c-winners__subtitle\">Et les gagnants sont ...</h2> \n                  {this.state.selectedItems.map((item, index) => {\n                      return (\n                        <div>  \n                             <input className=\"c-winners__input\"\n                              type=\"c-winners__text\"\n                              key={index}\n                              Value={item.nom_prenom}\n                               />\n                        </div>  \n                      )\n                    })}\n            </div>\n        )\n    }\n}\n  \n\n  export default connect ( null, mapActionToProps)(Winners);\n\n\n\n"]},"metadata":{},"sourceType":"module"}