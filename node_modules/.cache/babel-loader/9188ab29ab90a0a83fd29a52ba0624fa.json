{"ast":null,"code":"import _classCallCheck from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/emleb/Projets perso/Breakfast/src/Components/Winners.jsx\";\nimport { connect } from 'react-redux';\nimport underscore from 'underscore';\nimport React, { Component } from 'react';\nimport './Winners.scss';\nimport { mailWinnersAction } from '../Actions/Actions';\n\nvar Winners =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Winners, _Component);\n\n  function Winners() {\n    _classCallCheck(this, Winners);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Winners).apply(this, arguments));\n  }\n\n  _createClass(Winners, [{\n    key: \"render\",\n    //the sampled result is stored in the new table selectedItems\n    // sampleList = () => {\n    //     const sampled = underscore.sample(this.state.users,3)\n    //   //   method \n    //     this.setState({\n    //       selectedItems: sampled,\n    //     }, this.addSelected)\n    // }\n    // //create a method that adds 3 persons in array alreadySelected// apply onClick\n    // addSelected = () => {\n    //   this.setState({\n    //       alreadySelected: [...this.state.alreadySelected, ...this.state.selectedItems]\n    //   })\n    // }\n    value: function render() {\n      var sampled = underscore.sample(this.props.users, 3); //ici je fais appelle à this.props.users car c'est le state général\n\n      return React.createElement(\"div\", {\n        className: \"c-winners\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"c-winners__subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Et les gagnants sont ...\"), sampled.map(function (item, index) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"c-winners__input\",\n          type: \"c-winners__text\",\n          key: index,\n          Value: item.nom_prenom,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }));\n      }), React.createElement(\"button\", {\n        className: \"c-winners__button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Pr\\xE9viens les gagnants!\"));\n    }\n  }]);\n\n  return Winners;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    users: store.users\n  };\n};\n\nvar mapDispatchToProps = {\n  mailWinners: mailWinnersAction\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Winners);","map":{"version":3,"sources":["/home/emleb/Projets perso/Breakfast/src/Components/Winners.jsx"],"names":["connect","underscore","React","Component","mailWinnersAction","Winners","sampled","sample","props","users","map","item","index","nom_prenom","mapStateToProps","store","mapDispatchToProps","mailWinners"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AAEA,SAASC,iBAAT,QAAiC,oBAAjC;;IAEMC,O;;;;;;;;;;;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;6BAEW;AACP,UAAMC,OAAO,GAAGL,UAAU,CAACM,MAAX,CAAkB,KAAKC,KAAL,CAAWC,KAA7B,EAAoC,CAApC,CAAhB,CADO,CAEP;;AAEE,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADD,EAGOH,OAAO,CAACI,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC1B,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK;AAAO,UAAA,SAAS,EAAC,kBAAjB;AACC,UAAA,IAAI,EAAC,iBADN;AAEC,UAAA,GAAG,EAAEA,KAFN;AAGC,UAAA,KAAK,EAAED,IAAI,CAACE,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADL,CADF;AASD,OAVF,CAHP,EAcQ;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAdR,CADJ;AAmBH;;;;EA1CiBV,S;;AA6CtB,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLN,IAAAA,KAAK,EAAEM,KAAK,CAACN;AADR,GAAP;AAGD,CAJD;;AAMA,IAAMO,kBAAkB,GAAG;AACzBC,EAAAA,WAAW,EAAEb;AADY,CAA3B;AAIA,eAAeJ,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA8CX,OAA9C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport underscore from 'underscore';\nimport React, { Component } from 'react';\nimport './Winners.scss';\n\nimport { mailWinnersAction} from '../Actions/Actions';\n\nclass Winners extends Component {\n\n\n  //the sampled result is stored in the new table selectedItems\n  // sampleList = () => {\n  //     const sampled = underscore.sample(this.state.users,3)\n  //   //   method \n  //     this.setState({\n  //       selectedItems: sampled,\n  //     }, this.addSelected)\n  // }\n\n  // //create a method that adds 3 persons in array alreadySelected// apply onClick\n  // addSelected = () => {\n  //   this.setState({\n  //       alreadySelected: [...this.state.alreadySelected, ...this.state.selectedItems]\n  //   })\n  // }\n\n    render() {\n      const sampled = underscore.sample(this.props.users, 3)\n      //ici je fais appelle à this.props.users car c'est le state général\n\n        return (\n            <div className=\"c-winners\">\n             <h2 className=\"c-winners__subtitle\">Et les gagnants sont ...</h2> \n             {/* <img className=\"c-winners__logo\" src={process.env.PUBLIC_URL+'/assets/images/coffee-cup.svg'} width=\"50px\" alt=\"Logo coffee-cup\" /> */}\n                  {sampled.map((item, index) => {\n                      return (\n                        <div>  \n                             <input className=\"c-winners__input\"\n                              type=\"c-winners__text\"\n                              key={index}\n                              Value={item.nom_prenom}\n                               />\n                        </div>  \n                      )\n                    })}\n                    <button className=\"c-winners__button\">Préviens les gagnants!</button>\n                    \n            </div>\n        )\n    }\n}\n  \nconst mapStateToProps = store => {\n  return {\n    users: store.users\n  }\n}\n\nconst mapDispatchToProps = {\n  mailWinners: mailWinnersAction,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps )(Winners);\n"]},"metadata":{},"sourceType":"module"}