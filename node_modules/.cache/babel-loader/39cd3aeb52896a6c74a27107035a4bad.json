{"ast":null,"code":"import _toConsumableArray from \"/home/emleb/Projets perso/Breakfast/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { SEND, DELETE_USER, ADD_USER, MAIL_WINNERS } from '../Actions/Actions';\nvar initialState = [];\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_USER:\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case DELETE_USER:\n      return state.filter(function (users) {\n        return users.id !== action.payload.id;\n      });\n\n    case SEND:\n      return [].concat(_toConsumableArray(state), _toConsumableArray(action.payload.users));\n\n    case MAIL_WINNER:\n      return [].concat(_toConsumableArray(state), [action.payload.winners]);\n\n    default:\n      return state;\n  }\n}); // export default (state = initialState, action) => {\n//     switch(action, type){\n//         case DELETE_USER:\n//             return[...state, action.payload]\n//             default:\n//             return state\n//     }\n// }\n// const Reducers = (state = initialState, action) => {\n//   switch (action.type) {\n//       case SEND:\n//           return [ ...state, ...payload.users]\n//       case DELETE_USER:\n//           return[...state,...action.payload]\n//       default:\n//           return state\n//   }  \n// }","map":{"version":3,"sources":["/home/emleb/Projets perso/Breakfast/src/Reducers/Reducers.js"],"names":["SEND","DELETE_USER","ADD_USER","MAIL_WINNERS","initialState","state","action","type","payload","filter","users","id","MAIL_WINNER","winners"],"mappings":";AAAA,SAASA,IAAT,EAAeC,WAAf,EAA4BC,QAA5B,EAAsCC,YAAtC,QAA0D,oBAA1D;AAGA,IAAMC,YAAY,GAAE,EAApB;AAEA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBD,YAAyB;AAAA,MAAXE,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,QAAL;AACE,0CAAWG,KAAX,IAAiBC,MAAM,CAACE,OAAxB;;AACF,SAAKP,WAAL;AACE,aAAOI,KAAK,CAACI,MAAN,CAAa,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACE,OAAP,CAAeG,EAAhC;AAAA,OAAlB,CAAP;;AACF,SAAKX,IAAL;AACI,0CAAYK,KAAZ,sBAAsBC,MAAM,CAACE,OAAP,CAAeE,KAArC;;AACJ,SAAKE,WAAL;AACE,0CAAWP,KAAX,IAAkBC,MAAM,CAACE,OAAP,CAAeK,OAAjC;;AACF;AACE,aAAOR,KAAP;AAVJ;AAYD,CAbD,E,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import { SEND, DELETE_USER, ADD_USER, MAIL_WINNERS } from '../Actions/Actions';\n\n\nconst initialState =[]\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_USER:\n      return [...state,action.payload];\n    case DELETE_USER:\n      return state.filter(users => users.id !== action.payload.id);\n    case SEND:\n        return [ ...state, ...action.payload.users];\n    case MAIL_WINNER:\n      return [...state, action.payload.winners]\n    default:\n      return state;\n  }\n}\n\n// export default (state = initialState, action) => {\n//     switch(action, type){\n//         case DELETE_USER:\n//             return[...state, action.payload]\n//             default:\n//             return state\n//     }\n// }\n\n// const Reducers = (state = initialState, action) => {\n//   switch (action.type) {\n//       case SEND:\n//           return [ ...state, ...payload.users]\n//       case DELETE_USER:\n//           return[...state,...action.payload]\n//       default:\n//           return state\n           \n//   }  \n// }\n\n"]},"metadata":{},"sourceType":"module"}